

第1章 程序设计


算法的概念

确定性，有穷性，可行性，输入/输出等特点
1.2 程序和程序设计

程序是指被自己算计连续执行的一条条指令的集合，是人与计算机实现沟通交流的特殊语言



2.程序的构成

（1） 声明区

声明区处在程序文件的所有函数的外部

包含头文件   #include <stream.h>
宏定义   #define PI 3.1456
类定义   class name{...};
结构体定义  struct record{...};
函数声明  void print();
全局变量声明   float H=2.05;
条件编译  #ifdef



(2) 主程序区
主程序以main()函数开始，是整个程序运行的入口，该函数中可能包含的内容有

局部变量的声明： 如 int i =1;
函数调用  如 y=sin(x);
一般运算 如 a=b+c+d/3;
结构控制  如if(a>b)c=a;
对象与结构的处理；
文件的处理等

(3)函数定义区

程序中除了main函数之外，还可以包含其他的函数，每个函数是由函数说明和函数体两个部分构成的


3.程序的书写规范


(1)  文件协定

c语言文件扩展名  .c
c++文件扩展名 .cpp
头文件扩展名.h

(2) 注释

1.注释要尽量解释概括，描述代码的功能和内容
2.文件头，函数头是注释的重点
3.每一个处理段至少有一个注释
4.全局变量，静态变量要有注释
5.每一个结构，类成员要有注释
6.对每一次修改做出记录，记录修改人，修改时间，必要时注明修改原因


4.程序设计过程应该包括分析，设计，编码，测试，排错等不同阶段


1.3  结构化程序设计

三种结构：顺序结构，选择结构，循环结构

循环结构又分为：当型循环和直到型循环

一个c语言程序总是从主函数开始执行的


第2章 数据类型及其运算

基本类型，构造类型，指针类型，无值类型

2.1 数据类型
c语言5种基本数据类型：

字符串 char
整型  int
单精度实型  float
双精度实型  double
空类型   void


c语言还提供了几种聚合类型

数组
指针
结构体 struct
共用体  union
位域
枚举 enum

2.1.1 变量，常量，标识符


1.标识符就是用来表示变量，常量，函数以及文件等的名称


2.变量 可以改变的量
变量=变量名+变量值


一个变量名实质上代表了内存中的一个存储单元，其变量值则代表了该单元存储的内容。
在程序执行过程中，通过变量名来引用变量值


3. 常量


常量分为，数值型常量，字符型常量。
数值型常量又分为整型常量和实型常量


符号常量

c语言用一个标识符表示一个常量，称为符号常量

定义符号常量的一般形式为   #define 标识符   常量


2.1.2  基本数据类型


[signed] int 
unsigned [int]
[singed] short [int]
unsigned short [int]
[sigened] long [int]
unsigend long [int]

float 
double
long double

字符型数据

1. 字符常量
就是用一对单引号括起来的单个字符


2.字符串常量

是用双引号扩括起来的0个或多个字符组成的序列
存储：每个字符串尾部自动加一个'\0'作为字符串结束表示。
字符串常量占用的字节数是字符串的总长度加1


3.字符变量

字符型的定义形式   char 变量名1(=初值)(，变量名(=初值2)..);


4. 字符变量的运算

字符串的连接就是将两个字符串连接在一起. "AB"+"CD"="ABCD";



4.数据类型之间的转换

不同数据类型之间运算，首先要将其转换为相同的类型，c语言类型转换分级别，一般是
(1) 低级向高级转换，需要以下规则


1.若参与类型运算量的不同，则先转换成同一类型，然后进行运算
2.转换按数据长度增加的方向进行，以保证精度不降低
3.所有的浮点运算都是以双精度进行的，即使仅含float单精度量运算的表达式，也要先转换成double 型
4.char型和short型参与运算时，必须先转换成int型
5.在c语言的赋值表达式中，赋值号右边的值先转换成与赋值号左边的变量相同的类型后
再记性赋值

(2) 若高级向低级转换，要到强制类型转换符
(类型说明符)(表达式) 

int(7.7) =7;


运算符和表达式


算术运算符


+ - × 、 - % ++ --

算术运算符优先级   括号>取负值>乘除运算>加减运算

赋值表达式 =


1. 一般形式  变量=表达式
2. 复合赋值

变量  运算符=(表达式)
等价于

变量=变量 运算符(表达式)


3. 赋值运算的数据类型转换


当赋值号左边的变量为短整型，右边的值为长整型时，短整型变量只能接受长整型数值低位上
对应字节(即两个字节)中的数据，相应的，高位上的数据将丢失！


2.2.3  自增，自减运算符

1.前缀形式(++k,--k)


若 int k=6;

若表达式为++k,先进行k增1的运算，k的值为7，表达式的值也为7；
若表达式为--k,则先进行k减1的运算，k的值为5，则表达式的值也为5


2.后缀形式(k++,k--)

若表达式为k++,则表达式先取k的值为6，然后k自行增1运算，使k的值为7
若表达式为k--,则表达式先取k的值为6，然后k自行减1运算， 使k的值为5


2.2.4  逻辑运算符和逻辑表达式


逻辑与  &&
逻辑或 ||
逻辑非  !

关系运算符  < > <= >= == !=


条件运算符 ?


表达式1? 表达式2：表达式3

运算过程：先求解表达式1，若其值为真（非0），则将表达式2的值作为整个表达式的取值；
若表达式1的值为假（0），则将表达式3的值作为整个表达式的取值

max =(a>b)? a:b


优先级

条件运算符 优先级高于赋值，逗号运算符，低于其他运算符

条件运算符具有结合性
右近原则
当一个表达式中出现多个条件运算时，应该将位于最右边的问号与离它最近的冒号配对，
并按这一原则正确区分各条件运算符的运算对象

逗号运算符和逗号表达式，
可以用来连接多个比倒是



第3 章 

表达式；


函数名(实际参数表)；


空语句

while(getchar()!="\n");

符合语句{语句1，语句2,...}


控制语句博爱看

选择，循环，转向和返回
if else switch

while do...while  for 


break continue goto

return


scanf函数是格式输入函数，即按用户指定的格式从键盘上把数据输入到指定的变量之中

scanf("格式说明字符串",变量地址);


%d 十进制证书
%c 单单字符
%f 浮点数

%s 读字符串


% + 附加格式字符+格式字符



变量地址需要的不是变量本身，而是变量的存储地址。
必须在变量a之前加取地址运算符，"&" &a表示变量a在内存中的地址


在%和格式字符之间加入*号，作用是跳过对应的输入数据

在格式字符前加入一个正整数指定输入数据所占的宽度



printf函数是格式化输出函数，一般用于向标准设备按规定格式输出信息，
printf("格式化字符串",参量1，参量2);


% + 附加格式字符 + 格式字符

printf的输出格式为自由格式，两个书之间是否留逗号，空格或回车，
完全取决于格式控制


getchar是字符输入函数，就是从标准输入设备(键盘)上输入一个字符，
直到回车才结束，回车前的所有输入字符都会之歌显示在屏幕上

getchar();

务必在程序(或文件)的开头加上编译与预处理命令(也称为包含命令)
#include<stdio.h>

putchar函数是字符输出函数，作用是向终端输出一个字符

putchar(ch);


其中ch可以是一个字符变量或常量，也可以是一个转义字符。



1.putchar函数的作用是向终端输出一个字符

只能用与单个字符的输出，且一次只能输出一个字符

使用putchar函数时，一定要在程序或文件的开头加上编译预处理名 #include<stdio.h>

